// <auto-generated />
using System;
using CricketAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CricketAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("CricketAPI.Models.Batting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Boundaries")
                        .HasColumnType("int");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Out")
                        .HasColumnType("bit");

                    b.Property<int>("Runs")
                        .HasColumnType("int");

                    b.Property<int>("Sixes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId")
                        .IsUnique();

                    b.ToTable("Battings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fee0d6c9-0249-4f52-94e6-5cb4686e49b4"),
                            Boundaries = 5,
                            GameId = new Guid("b78f32c7-caa6-4a27-8043-ca8d704d18be"),
                            Out = true,
                            Runs = 42,
                            Sixes = 3
                        },
                        new
                        {
                            Id = new Guid("d30fab19-0ac0-4875-9479-15edd6384dae"),
                            Boundaries = 2,
                            GameId = new Guid("5e0da44f-0c77-4811-9509-71d3f5a4e055"),
                            Out = false,
                            Runs = 11,
                            Sixes = 0
                        },
                        new
                        {
                            Id = new Guid("be5c0c50-668d-4f55-97ec-bf3dd95bf16f"),
                            Boundaries = 10,
                            GameId = new Guid("07950e05-2ac6-4566-bcf4-37a475d134c0"),
                            Out = true,
                            Runs = 72,
                            Sixes = 2
                        },
                        new
                        {
                            Id = new Guid("274fe76b-91ad-4ef1-bf07-bd25d8925273"),
                            Boundaries = 5,
                            GameId = new Guid("31964ae0-bb3e-4f14-b201-8cc64a866f46"),
                            Out = true,
                            Runs = 33,
                            Sixes = 2
                        });
                });

            modelBuilder.Entity("CricketAPI.Models.Bowling", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Maidens")
                        .HasColumnType("int");

                    b.Property<int>("Overs")
                        .HasColumnType("int");

                    b.Property<int>("Runs")
                        .HasColumnType("int");

                    b.Property<int>("Wickets")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId")
                        .IsUnique();

                    b.ToTable("Bowlings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ffecdf7f-dcab-4bef-9e36-e9df5373a01e"),
                            GameId = new Guid("b78f32c7-caa6-4a27-8043-ca8d704d18be"),
                            Maidens = 1,
                            Overs = 6,
                            Runs = 34,
                            Wickets = 3
                        },
                        new
                        {
                            Id = new Guid("de967516-2d69-4721-a055-1ce917a55fcd"),
                            GameId = new Guid("5e0da44f-0c77-4811-9509-71d3f5a4e055"),
                            Maidens = 2,
                            Overs = 8,
                            Runs = 41,
                            Wickets = 2
                        },
                        new
                        {
                            Id = new Guid("d7678a77-628b-407e-b6a8-c13b8b9de529"),
                            GameId = new Guid("07950e05-2ac6-4566-bcf4-37a475d134c0"),
                            Maidens = 4,
                            Overs = 5,
                            Runs = 18,
                            Wickets = 0
                        },
                        new
                        {
                            Id = new Guid("efe01505-b8b2-4038-aa72-84aa060380a0"),
                            GameId = new Guid("31964ae0-bb3e-4f14-b201-8cc64a866f46"),
                            Maidens = 3,
                            Overs = 11,
                            Runs = 42,
                            Wickets = 5
                        });
                });

            modelBuilder.Entity("CricketAPI.Models.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Opponent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b78f32c7-caa6-4a27-8043-ca8d704d18be"),
                            Date = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Opponent = "Bury"
                        },
                        new
                        {
                            Id = new Guid("5e0da44f-0c77-4811-9509-71d3f5a4e055"),
                            Date = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Opponent = "Eccles"
                        },
                        new
                        {
                            Id = new Guid("07950e05-2ac6-4566-bcf4-37a475d134c0"),
                            Date = new DateTime(2022, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Opponent = "Worsley"
                        },
                        new
                        {
                            Id = new Guid("31964ae0-bb3e-4f14-b201-8cc64a866f46"),
                            Date = new DateTime(2022, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Opponent = "Wilmslow"
                        });
                });

            modelBuilder.Entity("CricketAPI.Models.GameLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ground")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Home")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GameId")
                        .IsUnique();

                    b.ToTable("GmeLocations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dd068f1b-30f2-41f4-9e21-2f7ee42fde1b"),
                            GameId = new Guid("b78f32c7-caa6-4a27-8043-ca8d704d18be"),
                            Ground = "Whalley Range",
                            Home = true
                        },
                        new
                        {
                            Id = new Guid("8a327c74-f7f7-4a2b-973e-dd2178d329ee"),
                            GameId = new Guid("5e0da44f-0c77-4811-9509-71d3f5a4e055"),
                            Ground = "Bury",
                            Home = false
                        },
                        new
                        {
                            Id = new Guid("cd8ce9de-84c1-44a6-92e7-42707f78ac8a"),
                            GameId = new Guid("07950e05-2ac6-4566-bcf4-37a475d134c0"),
                            Ground = "Worsley",
                            Home = false
                        },
                        new
                        {
                            Id = new Guid("5074cab6-aabf-460e-a90f-6f982033714d"),
                            GameId = new Guid("31964ae0-bb3e-4f14-b201-8cc64a866f46"),
                            Ground = "Whalley Range",
                            Home = true
                        });
                });

            modelBuilder.Entity("CricketAPI.Models.Result", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("By")
                        .HasColumnType("int");

                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Won")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("GameId")
                        .IsUnique();

                    b.ToTable("Results");

                    b.HasData(
                        new
                        {
                            Id = new Guid("89a144e7-e231-4994-8427-0ffe484b4a62"),
                            By = 42,
                            GameId = new Guid("b78f32c7-caa6-4a27-8043-ca8d704d18be"),
                            Method = "Runs",
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("af553dcb-03ae-4d8c-8f64-3a2e90a57c83"),
                            By = 7,
                            GameId = new Guid("5e0da44f-0c77-4811-9509-71d3f5a4e055"),
                            Method = "Wickets",
                            Won = false
                        },
                        new
                        {
                            Id = new Guid("78717cc7-4111-4414-8303-5d5cbbf52139"),
                            By = 5,
                            GameId = new Guid("07950e05-2ac6-4566-bcf4-37a475d134c0"),
                            Method = "Wickets",
                            Won = true
                        },
                        new
                        {
                            Id = new Guid("724966b4-738e-4c6e-a5db-41e77f6a23d5"),
                            By = 110,
                            GameId = new Guid("31964ae0-bb3e-4f14-b201-8cc64a866f46"),
                            Method = "Runs",
                            Won = false
                        });
                });

            modelBuilder.Entity("CricketAPI.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CricketAPI.Models.Batting", b =>
                {
                    b.HasOne("CricketAPI.Models.Game", "Game")
                        .WithOne("Batting")
                        .HasForeignKey("CricketAPI.Models.Batting", "GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("CricketAPI.Models.Bowling", b =>
                {
                    b.HasOne("CricketAPI.Models.Game", "Game")
                        .WithOne("Bowling")
                        .HasForeignKey("CricketAPI.Models.Bowling", "GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("CricketAPI.Models.GameLocation", b =>
                {
                    b.HasOne("CricketAPI.Models.Game", "Game")
                        .WithOne("Location")
                        .HasForeignKey("CricketAPI.Models.GameLocation", "GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("CricketAPI.Models.Result", b =>
                {
                    b.HasOne("CricketAPI.Models.Game", "Game")
                        .WithOne("Result")
                        .HasForeignKey("CricketAPI.Models.Result", "GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("CricketAPI.Models.Game", b =>
                {
                    b.Navigation("Batting");

                    b.Navigation("Bowling");

                    b.Navigation("Location");

                    b.Navigation("Result");
                });
#pragma warning restore 612, 618
        }
    }
}
